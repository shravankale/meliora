; ModuleID = 'identity.c.bc'
source_filename = "identity.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: noinline nounwind uwtable
define dso_local void @identity(i32** noundef %a, i32 noundef %N) #0 !dbg !8 {
entry:
  call void @llvm.dbg.value(metadata i32** %a, metadata !15, metadata !DIExpression()), !dbg !16
  call void @llvm.dbg.value(metadata i32 %N, metadata !17, metadata !DIExpression()), !dbg !16
  call void @llvm.dbg.value(metadata i32 0, metadata !18, metadata !DIExpression()), !dbg !16
  %cmp5 = icmp sgt i32 %N, 0, !dbg !19
  br i1 %cmp5, label %for.cond1.preheader.lr.ph, label %for.cond9.preheader, !dbg !22

for.cond1.preheader.lr.ph:                        ; preds = %entry
  %wide.trip.count11 = zext i32 %N to i64, !dbg !19
  br label %for.cond1.preheader, !dbg !22

for.cond1.preheader:                              ; preds = %for.cond1.preheader.lr.ph, %for.inc6
  %indvars.iv9 = phi i64 [ 0, %for.cond1.preheader.lr.ph ], [ %indvars.iv.next10, %for.inc6 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv9, metadata !18, metadata !DIExpression()), !dbg !16
  call void @llvm.dbg.value(metadata i32 0, metadata !23, metadata !DIExpression()), !dbg !16
  %cmp23 = icmp sgt i32 %N, 0, !dbg !24
  br i1 %cmp23, label %for.body3.lr.ph, label %for.inc6, !dbg !28

for.body3.lr.ph:                                  ; preds = %for.cond1.preheader
  %wide.trip.count = zext i32 %N to i64, !dbg !24
  br label %for.body3, !dbg !28

for.cond.for.cond9.preheader_crit_edge:           ; preds = %for.inc6
  %inc7.lcssa.wide = phi i64 [ %indvars.iv.next10, %for.inc6 ]
  %0 = trunc i64 %inc7.lcssa.wide to i32, !dbg !22
  br label %for.cond9.preheader, !dbg !22

for.cond9.preheader:                              ; preds = %for.cond.for.cond9.preheader_crit_edge, %entry
  %i.0.lcssa = phi i32 [ %0, %for.cond.for.cond9.preheader_crit_edge ], [ 0, %entry ], !dbg !29
  call void @llvm.dbg.value(metadata i32 %i.0.lcssa, metadata !18, metadata !DIExpression()), !dbg !16
  %cmp101 = icmp slt i32 %i.0.lcssa, %N, !dbg !30
  br i1 %cmp101, label %for.body11.lr.ph, label %for.end18, !dbg !33

for.body11.lr.ph:                                 ; preds = %for.cond9.preheader
  br label %for.body11, !dbg !33

for.body3:                                        ; preds = %for.body3.lr.ph, %for.body3
  %indvars.iv = phi i64 [ 0, %for.body3.lr.ph ], [ %indvars.iv.next, %for.body3 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !23, metadata !DIExpression()), !dbg !16
  %arrayidx = getelementptr inbounds i32*, i32** %a, i64 %indvars.iv9, !dbg !34
  %1 = load i32*, i32** %arrayidx, align 8, !dbg !34
  %arrayidx5 = getelementptr inbounds i32, i32* %1, i64 %indvars.iv, !dbg !34
  store i32 0, i32* %arrayidx5, align 4, !dbg !36
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !37
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !23, metadata !DIExpression()), !dbg !16
  %exitcond8 = icmp ne i64 %indvars.iv.next, %wide.trip.count, !dbg !24
  br i1 %exitcond8, label %for.body3, label %for.cond1.for.inc6_crit_edge, !dbg !28, !llvm.loop !38

for.cond1.for.inc6_crit_edge:                     ; preds = %for.body3
  br label %for.inc6, !dbg !28

for.inc6:                                         ; preds = %for.cond1.for.inc6_crit_edge, %for.cond1.preheader
  %indvars.iv.next10 = add nuw nsw i64 %indvars.iv9, 1, !dbg !41
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next10, metadata !18, metadata !DIExpression()), !dbg !16
  %exitcond12 = icmp ne i64 %indvars.iv.next10, %wide.trip.count11, !dbg !19
  br i1 %exitcond12, label %for.cond1.preheader, label %for.cond.for.cond9.preheader_crit_edge, !dbg !22, !llvm.loop !42

for.body11:                                       ; preds = %for.body11.lr.ph, %for.body11
  %i.12 = phi i32 [ %i.0.lcssa, %for.body11.lr.ph ], [ %inc17, %for.body11 ]
  call void @llvm.dbg.value(metadata i32 %i.12, metadata !18, metadata !DIExpression()), !dbg !16
  %2 = load i32*, i32** %a, align 8, !dbg !44
  store i32 1, i32* %2, align 4, !dbg !46
  %inc17 = add nuw nsw i32 %i.12, 1, !dbg !47
  call void @llvm.dbg.value(metadata i32 %inc17, metadata !18, metadata !DIExpression()), !dbg !16
  %exitcond = icmp ne i32 %inc17, %N, !dbg !30
  br i1 %exitcond, label %for.body11, label %for.cond9.for.end18_crit_edge, !dbg !33, !llvm.loop !48

for.cond9.for.end18_crit_edge:                    ; preds = %for.body11
  br label %for.end18, !dbg !33

for.end18:                                        ; preds = %for.cond9.for.end18_crit_edge, %for.cond9.preheader
  ret void, !dbg !50
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @main() #0 !dbg !51 {
entry:
  call void @llvm.dbg.value(metadata i32 5, metadata !54, metadata !DIExpression()), !dbg !55
  %vla1 = alloca [25 x i32*], align 16, !dbg !56
  call void @llvm.dbg.value(metadata i64 5, metadata !57, metadata !DIExpression()), !dbg !55
  call void @llvm.dbg.value(metadata i64 5, metadata !59, metadata !DIExpression()), !dbg !55
  call void @llvm.dbg.declare(metadata i32** %vla1.sub, metadata !60, metadata !DIExpression()), !dbg !65
  %vla1.sub = getelementptr inbounds [25 x i32*], [25 x i32*]* %vla1, i64 0, i64 0
  call void @identity(i32** noundef nonnull %vla1.sub, i32 noundef 5), !dbg !66
  ret i32 0, !dbg !67
}

; Function Attrs: nofree nosync nounwind willreturn
declare i8* @llvm.stacksave() #2

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.stackrestore(i8*) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { noinline nounwind uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { nofree nosync nounwind willreturn }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4, !5, !6}
!llvm.ident = !{!7}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 14.0.1 (https://github.com/llvm/llvm-project.git c62053979489ccb002efe411c3af059addcb5d7d)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "identity.c", directory: "/home/users/shravank/projects/meliora2/Meliora/build", checksumkind: CSK_MD5, checksum: "17390f166a64a8ac5f316ce394e3bfcc")
!2 = !{i32 7, !"Dwarf Version", i32 5}
!3 = !{i32 2, !"Debug Info Version", i32 3}
!4 = !{i32 1, !"wchar_size", i32 4}
!5 = !{i32 7, !"uwtable", i32 1}
!6 = !{i32 7, !"frame-pointer", i32 2}
!7 = !{!"clang version 14.0.1 (https://github.com/llvm/llvm-project.git c62053979489ccb002efe411c3af059addcb5d7d)"}
!8 = distinct !DISubprogram(name: "identity", scope: !1, file: !1, line: 3, type: !9, scopeLine: 3, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !14)
!9 = !DISubroutineType(types: !10)
!10 = !{null, !11, !13}
!11 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12, size: 64)
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64)
!13 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!14 = !{}
!15 = !DILocalVariable(name: "a", arg: 1, scope: !8, file: !1, line: 3, type: !11)
!16 = !DILocation(line: 0, scope: !8)
!17 = !DILocalVariable(name: "N", arg: 2, scope: !8, file: !1, line: 3, type: !13)
!18 = !DILocalVariable(name: "i", scope: !8, file: !1, line: 4, type: !13)
!19 = !DILocation(line: 6, column: 15, scope: !20)
!20 = distinct !DILexicalBlock(scope: !21, file: !1, line: 6, column: 5)
!21 = distinct !DILexicalBlock(scope: !8, file: !1, line: 6, column: 5)
!22 = !DILocation(line: 6, column: 5, scope: !21)
!23 = !DILocalVariable(name: "j", scope: !8, file: !1, line: 4, type: !13)
!24 = !DILocation(line: 7, column: 19, scope: !25)
!25 = distinct !DILexicalBlock(scope: !26, file: !1, line: 7, column: 9)
!26 = distinct !DILexicalBlock(scope: !27, file: !1, line: 7, column: 9)
!27 = distinct !DILexicalBlock(scope: !20, file: !1, line: 6, column: 23)
!28 = !DILocation(line: 7, column: 9, scope: !26)
!29 = !DILocation(line: 0, scope: !21)
!30 = !DILocation(line: 12, column: 20, scope: !31)
!31 = distinct !DILexicalBlock(scope: !32, file: !1, line: 12, column: 5)
!32 = distinct !DILexicalBlock(scope: !8, file: !1, line: 12, column: 5)
!33 = !DILocation(line: 12, column: 5, scope: !32)
!34 = !DILocation(line: 8, column: 13, scope: !35)
!35 = distinct !DILexicalBlock(scope: !25, file: !1, line: 7, column: 27)
!36 = !DILocation(line: 8, column: 20, scope: !35)
!37 = !DILocation(line: 7, column: 24, scope: !25)
!38 = distinct !{!38, !28, !39, !40}
!39 = !DILocation(line: 9, column: 9, scope: !26)
!40 = !{!"llvm.loop.mustprogress"}
!41 = !DILocation(line: 6, column: 20, scope: !20)
!42 = distinct !{!42, !22, !43, !40}
!43 = !DILocation(line: 10, column: 5, scope: !21)
!44 = !DILocation(line: 13, column: 9, scope: !45)
!45 = distinct !DILexicalBlock(scope: !31, file: !1, line: 12, column: 28)
!46 = !DILocation(line: 13, column: 26, scope: !45)
!47 = !DILocation(line: 12, column: 25, scope: !31)
!48 = distinct !{!48, !33, !49, !40}
!49 = !DILocation(line: 14, column: 5, scope: !32)
!50 = !DILocation(line: 15, column: 1, scope: !8)
!51 = distinct !DISubprogram(name: "main", scope: !1, file: !1, line: 24, type: !52, scopeLine: 24, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !14)
!52 = !DISubroutineType(types: !53)
!53 = !{!13}
!54 = !DILocalVariable(name: "N", scope: !51, file: !1, line: 26, type: !13)
!55 = !DILocation(line: 0, scope: !51)
!56 = !DILocation(line: 27, column: 5, scope: !51)
!57 = !DILocalVariable(name: "__vla_expr0", scope: !51, type: !58, flags: DIFlagArtificial)
!58 = !DIBasicType(name: "unsigned long", size: 64, encoding: DW_ATE_unsigned)
!59 = !DILocalVariable(name: "__vla_expr1", scope: !51, type: !58, flags: DIFlagArtificial)
!60 = !DILocalVariable(name: "a", scope: !51, file: !1, line: 27, type: !61)
!61 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, elements: !62)
!62 = !{!63, !64}
!63 = !DISubrange(count: !57)
!64 = !DISubrange(count: !59)
!65 = !DILocation(line: 27, column: 10, scope: !51)
!66 = !DILocation(line: 29, column: 5, scope: !51)
!67 = !DILocation(line: 31, column: 1, scope: !51)
